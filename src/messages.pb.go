// Code generated by protoc-gen-go.
// source: messages.proto
// DO NOT EDIT!

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	messages.proto

It has these top-level messages:
	ExecutionStatus
	ExecutionStatusResponse
	ExecutionStartingRequest
	SpecExecutionStartingRequest
	SpecExecutionEndingRequest
	ExecuteStepRequest
	ProtoTable
	TableRow
	Argument
	ExecuteStepResponse
	StepValidateRequest
	StepValidateResponse
	ExecutionEndingRequest
	Message
*/
package main

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type Message_MessageType int32

const (
	Message_ExecutionStarting       Message_MessageType = 0
	Message_SpecExecutionStarting   Message_MessageType = 1
	Message_SpecExecutionEnding     Message_MessageType = 2
	Message_ExecuteStep             Message_MessageType = 3
	Message_ExecuteStepResponse     Message_MessageType = 4
	Message_ExecutionEnding         Message_MessageType = 5
	Message_StepValidateRequest     Message_MessageType = 6
	Message_StepValidateResponse    Message_MessageType = 7
	Message_ExecutionStatusResponse Message_MessageType = 8
)

var Message_MessageType_name = map[int32]string{
	0: "ExecutionStarting",
	1: "SpecExecutionStarting",
	2: "SpecExecutionEnding",
	3: "ExecuteStep",
	4: "ExecuteStepResponse",
	5: "ExecutionEnding",
	6: "StepValidateRequest",
	7: "StepValidateResponse",
	8: "ExecutionStatusResponse",
}
var Message_MessageType_value = map[string]int32{
	"ExecutionStarting":       0,
	"SpecExecutionStarting":   1,
	"SpecExecutionEnding":     2,
	"ExecuteStep":             3,
	"ExecuteStepResponse":     4,
	"ExecutionEnding":         5,
	"StepValidateRequest":     6,
	"StepValidateResponse":    7,
	"ExecutionStatusResponse": 8,
}

func (x Message_MessageType) Enum() *Message_MessageType {
	p := new(Message_MessageType)
	*p = x
	return p
}
func (x Message_MessageType) String() string {
	return proto.EnumName(Message_MessageType_name, int32(x))
}
func (x *Message_MessageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Message_MessageType_value, data, "Message_MessageType")
	if err != nil {
		return err
	}
	*x = Message_MessageType(value)
	return nil
}

type ExecutionStatus struct {
	Passed           *bool   `protobuf:"varint,1,req,name=passed" json:"passed,omitempty"`
	RecoverableError *bool   `protobuf:"varint,2,opt,name=recoverableError" json:"recoverableError,omitempty"`
	ErrorMessage     *string `protobuf:"bytes,3,opt,name=errorMessage" json:"errorMessage,omitempty"`
	StackTrace       *string `protobuf:"bytes,4,opt,name=stackTrace" json:"stackTrace,omitempty"`
	ScreenShot       []byte  `protobuf:"bytes,5,opt,name=screenShot" json:"screenShot,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ExecutionStatus) Reset()         { *m = ExecutionStatus{} }
func (m *ExecutionStatus) String() string { return proto.CompactTextString(m) }
func (*ExecutionStatus) ProtoMessage()    {}

func (m *ExecutionStatus) GetPassed() bool {
	if m != nil && m.Passed != nil {
		return *m.Passed
	}
	return false
}

func (m *ExecutionStatus) GetRecoverableError() bool {
	if m != nil && m.RecoverableError != nil {
		return *m.RecoverableError
	}
	return false
}

func (m *ExecutionStatus) GetErrorMessage() string {
	if m != nil && m.ErrorMessage != nil {
		return *m.ErrorMessage
	}
	return ""
}

func (m *ExecutionStatus) GetStackTrace() string {
	if m != nil && m.StackTrace != nil {
		return *m.StackTrace
	}
	return ""
}

func (m *ExecutionStatus) GetScreenShot() []byte {
	if m != nil {
		return m.ScreenShot
	}
	return nil
}

// Sends to any request which needs a execution status as response
type ExecutionStatusResponse struct {
	ExecutionStatus  *ExecutionStatus `protobuf:"bytes,1,req,name=executionStatus" json:"executionStatus,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *ExecutionStatusResponse) Reset()         { *m = ExecutionStatusResponse{} }
func (m *ExecutionStatusResponse) String() string { return proto.CompactTextString(m) }
func (*ExecutionStatusResponse) ProtoMessage()    {}

func (m *ExecutionStatusResponse) GetExecutionStatus() *ExecutionStatus {
	if m != nil {
		return m.ExecutionStatus
	}
	return nil
}

type ExecutionStartingRequest struct {
	SpecFile         *string `protobuf:"bytes,1,req,name=specFile" json:"specFile,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ExecutionStartingRequest) Reset()         { *m = ExecutionStartingRequest{} }
func (m *ExecutionStartingRequest) String() string { return proto.CompactTextString(m) }
func (*ExecutionStartingRequest) ProtoMessage()    {}

func (m *ExecutionStartingRequest) GetSpecFile() string {
	if m != nil && m.SpecFile != nil {
		return *m.SpecFile
	}
	return ""
}

type SpecExecutionStartingRequest struct {
	SpecName         *string `protobuf:"bytes,1,req,name=specName" json:"specName,omitempty"`
	SpecFile         *string `protobuf:"bytes,2,req,name=specFile" json:"specFile,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SpecExecutionStartingRequest) Reset()         { *m = SpecExecutionStartingRequest{} }
func (m *SpecExecutionStartingRequest) String() string { return proto.CompactTextString(m) }
func (*SpecExecutionStartingRequest) ProtoMessage()    {}

func (m *SpecExecutionStartingRequest) GetSpecName() string {
	if m != nil && m.SpecName != nil {
		return *m.SpecName
	}
	return ""
}

func (m *SpecExecutionStartingRequest) GetSpecFile() string {
	if m != nil && m.SpecFile != nil {
		return *m.SpecFile
	}
	return ""
}

type SpecExecutionEndingRequest struct {
	SpecName         *string `protobuf:"bytes,1,req,name=specName" json:"specName,omitempty"`
	SpecFile         *string `protobuf:"bytes,2,req,name=specFile" json:"specFile,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SpecExecutionEndingRequest) Reset()         { *m = SpecExecutionEndingRequest{} }
func (m *SpecExecutionEndingRequest) String() string { return proto.CompactTextString(m) }
func (*SpecExecutionEndingRequest) ProtoMessage()    {}

func (m *SpecExecutionEndingRequest) GetSpecName() string {
	if m != nil && m.SpecName != nil {
		return *m.SpecName
	}
	return ""
}

func (m *SpecExecutionEndingRequest) GetSpecFile() string {
	if m != nil && m.SpecFile != nil {
		return *m.SpecFile
	}
	return ""
}

type ExecuteStepRequest struct {
	StepText         *string     `protobuf:"bytes,1,req,name=stepText" json:"stepText,omitempty"`
	ScenarioFailing  *bool       `protobuf:"varint,2,opt,name=scenarioFailing" json:"scenarioFailing,omitempty"`
	Args             []*Argument `protobuf:"bytes,3,rep,name=args" json:"args,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *ExecuteStepRequest) Reset()         { *m = ExecuteStepRequest{} }
func (m *ExecuteStepRequest) String() string { return proto.CompactTextString(m) }
func (*ExecuteStepRequest) ProtoMessage()    {}

func (m *ExecuteStepRequest) GetStepText() string {
	if m != nil && m.StepText != nil {
		return *m.StepText
	}
	return ""
}

func (m *ExecuteStepRequest) GetScenarioFailing() bool {
	if m != nil && m.ScenarioFailing != nil {
		return *m.ScenarioFailing
	}
	return false
}

func (m *ExecuteStepRequest) GetArgs() []*Argument {
	if m != nil {
		return m.Args
	}
	return nil
}

type ProtoTable struct {
	Rows             []*TableRow `protobuf:"bytes,1,rep,name=rows" json:"rows,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *ProtoTable) Reset()         { *m = ProtoTable{} }
func (m *ProtoTable) String() string { return proto.CompactTextString(m) }
func (*ProtoTable) ProtoMessage()    {}

func (m *ProtoTable) GetRows() []*TableRow {
	if m != nil {
		return m.Rows
	}
	return nil
}

type TableRow struct {
	Cells            []string `protobuf:"bytes,1,rep,name=cells" json:"cells,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *TableRow) Reset()         { *m = TableRow{} }
func (m *TableRow) String() string { return proto.CompactTextString(m) }
func (*TableRow) ProtoMessage()    {}

func (m *TableRow) GetCells() []string {
	if m != nil {
		return m.Cells
	}
	return nil
}

type Argument struct {
	Type             *string     `protobuf:"bytes,1,req,name=type" json:"type,omitempty"`
	Value            *string     `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Table            *ProtoTable `protobuf:"bytes,3,opt,name=table" json:"table,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *Argument) Reset()         { *m = Argument{} }
func (m *Argument) String() string { return proto.CompactTextString(m) }
func (*Argument) ProtoMessage()    {}

func (m *Argument) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Argument) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func (m *Argument) GetTable() *ProtoTable {
	if m != nil {
		return m.Table
	}
	return nil
}

type ExecuteStepResponse struct {
	Passed           *bool   `protobuf:"varint,2,req,name=passed" json:"passed,omitempty"`
	RecoverableError *bool   `protobuf:"varint,3,opt,name=recoverableError" json:"recoverableError,omitempty"`
	ErrorMessage     *string `protobuf:"bytes,4,opt,name=errorMessage" json:"errorMessage,omitempty"`
	StackTrace       *string `protobuf:"bytes,5,opt,name=stackTrace" json:"stackTrace,omitempty"`
	ScreenShot       []byte  `protobuf:"bytes,6,opt,name=screenShot" json:"screenShot,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ExecuteStepResponse) Reset()         { *m = ExecuteStepResponse{} }
func (m *ExecuteStepResponse) String() string { return proto.CompactTextString(m) }
func (*ExecuteStepResponse) ProtoMessage()    {}

func (m *ExecuteStepResponse) GetPassed() bool {
	if m != nil && m.Passed != nil {
		return *m.Passed
	}
	return false
}

func (m *ExecuteStepResponse) GetRecoverableError() bool {
	if m != nil && m.RecoverableError != nil {
		return *m.RecoverableError
	}
	return false
}

func (m *ExecuteStepResponse) GetErrorMessage() string {
	if m != nil && m.ErrorMessage != nil {
		return *m.ErrorMessage
	}
	return ""
}

func (m *ExecuteStepResponse) GetStackTrace() string {
	if m != nil && m.StackTrace != nil {
		return *m.StackTrace
	}
	return ""
}

func (m *ExecuteStepResponse) GetScreenShot() []byte {
	if m != nil {
		return m.ScreenShot
	}
	return nil
}

type StepValidateRequest struct {
	StepText         *string `protobuf:"bytes,1,req,name=stepText" json:"stepText,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *StepValidateRequest) Reset()         { *m = StepValidateRequest{} }
func (m *StepValidateRequest) String() string { return proto.CompactTextString(m) }
func (*StepValidateRequest) ProtoMessage()    {}

func (m *StepValidateRequest) GetStepText() string {
	if m != nil && m.StepText != nil {
		return *m.StepText
	}
	return ""
}

type StepValidateResponse struct {
	IsValid          *bool  `protobuf:"varint,1,req,name=isValid" json:"isValid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *StepValidateResponse) Reset()         { *m = StepValidateResponse{} }
func (m *StepValidateResponse) String() string { return proto.CompactTextString(m) }
func (*StepValidateResponse) ProtoMessage()    {}

func (m *StepValidateResponse) GetIsValid() bool {
	if m != nil && m.IsValid != nil {
		return *m.IsValid
	}
	return false
}

type ExecutionEndingRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ExecutionEndingRequest) Reset()         { *m = ExecutionEndingRequest{} }
func (m *ExecutionEndingRequest) String() string { return proto.CompactTextString(m) }
func (*ExecutionEndingRequest) ProtoMessage()    {}

// This is the message which gets transferred all the time
// with proper message type set
type Message struct {
	MessageType *Message_MessageType `protobuf:"varint,1,req,name=messageType,enum=main.Message_MessageType" json:"messageType,omitempty"`
	// A unique id to represent this message. A response to the message should copy over this value
	// this is used to synchronize messages & responses
	MessageId *int64 `protobuf:"varint,2,req,name=messageId" json:"messageId,omitempty"`
	// One of the following will have a value
	ExecutionStartingRequest     *ExecutionStartingRequest     `protobuf:"bytes,3,opt,name=executionStartingRequest" json:"executionStartingRequest,omitempty"`
	SpecExecutionStartingRequest *SpecExecutionStartingRequest `protobuf:"bytes,4,opt,name=specExecutionStartingRequest" json:"specExecutionStartingRequest,omitempty"`
	SpecExecutionEndingRequest   *SpecExecutionEndingRequest   `protobuf:"bytes,5,opt,name=specExecutionEndingRequest" json:"specExecutionEndingRequest,omitempty"`
	ExecuteStepRequest           *ExecuteStepRequest           `protobuf:"bytes,6,opt,name=executeStepRequest" json:"executeStepRequest,omitempty"`
	ExecuteStepResponse          *ExecuteStepResponse          `protobuf:"bytes,7,opt,name=executeStepResponse" json:"executeStepResponse,omitempty"`
	ExecutionEndingRequest       *ExecutionEndingRequest       `protobuf:"bytes,8,opt,name=executionEndingRequest" json:"executionEndingRequest,omitempty"`
	StepValidateRequest          *StepValidateRequest          `protobuf:"bytes,9,opt,name=stepValidateRequest" json:"stepValidateRequest,omitempty"`
	StepValidateResponse         *StepValidateResponse         `protobuf:"bytes,10,opt,name=stepValidateResponse" json:"stepValidateResponse,omitempty"`
	ExecutionStatusResponse      *ExecutionStatusResponse      `protobuf:"bytes,11,opt,name=executionStatusResponse" json:"executionStatusResponse,omitempty"`
	XXX_unrecognized             []byte                        `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}

func (m *Message) GetMessageType() Message_MessageType {
	if m != nil && m.MessageType != nil {
		return *m.MessageType
	}
	return Message_ExecutionStarting
}

func (m *Message) GetMessageId() int64 {
	if m != nil && m.MessageId != nil {
		return *m.MessageId
	}
	return 0
}

func (m *Message) GetExecutionStartingRequest() *ExecutionStartingRequest {
	if m != nil {
		return m.ExecutionStartingRequest
	}
	return nil
}

func (m *Message) GetSpecExecutionStartingRequest() *SpecExecutionStartingRequest {
	if m != nil {
		return m.SpecExecutionStartingRequest
	}
	return nil
}

func (m *Message) GetSpecExecutionEndingRequest() *SpecExecutionEndingRequest {
	if m != nil {
		return m.SpecExecutionEndingRequest
	}
	return nil
}

func (m *Message) GetExecuteStepRequest() *ExecuteStepRequest {
	if m != nil {
		return m.ExecuteStepRequest
	}
	return nil
}

func (m *Message) GetExecuteStepResponse() *ExecuteStepResponse {
	if m != nil {
		return m.ExecuteStepResponse
	}
	return nil
}

func (m *Message) GetExecutionEndingRequest() *ExecutionEndingRequest {
	if m != nil {
		return m.ExecutionEndingRequest
	}
	return nil
}

func (m *Message) GetStepValidateRequest() *StepValidateRequest {
	if m != nil {
		return m.StepValidateRequest
	}
	return nil
}

func (m *Message) GetStepValidateResponse() *StepValidateResponse {
	if m != nil {
		return m.StepValidateResponse
	}
	return nil
}

func (m *Message) GetExecutionStatusResponse() *ExecutionStatusResponse {
	if m != nil {
		return m.ExecutionStatusResponse
	}
	return nil
}

func init() {
	proto.RegisterEnum("main.Message_MessageType", Message_MessageType_name, Message_MessageType_value)
}
